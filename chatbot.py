import re
import random
import datetime
import requests

# Определяем словарь шаблонов и ответов
responses = {
    r"как тебя зовут\?": "Я бот-помощник!",
    r"что ты умеешь\?": "Я умею отвечать на простые вопросы. Попробуй спросить: 'Как тебя зовут?'",
    r"сколько сейчас время\?": lambda: datetime.datetime.now().strftime("Сейчас время %H:%M:%S"),
    r"какое сегодня число\?": lambda: datetime.date.today().strftime("Сегодня %d.%m.%Y"),
    r"какая сейчас погода\?": "На улице Rain, на душе pain",
    r"расскажи интересный факт": "О какой категории вы хотите узнать факт? (спорт, история, космос)",
    r"еще один факт": "О какой категории вы хотите узнать факт? (спорт, история, космос)"
}

# Словарь фактов по категориям
facts = {
    "спорт": [
        "Бадминтон – является самым быстрым ракеточным видом спорта: скорость полета волана может достигать в среднем "
        "270 км/час.",
        "В стандартном мячике для гольфа всего 336 выемок.",
        "В пелотоне Формулы-1 нет болида под номером 13, после 12-го сразу идёт 14-й. Всего в чемпионате мира номер "
        "13 использовали только пять человек."
        "Первая игра в баскетбол у американских студентов выглядела как забрасывание мяча в корзину из-под персиков,"
        "при этом корзина имела дно, и каждый раз игроки вынуждены были залезать на лестницу, чтобы достать мяч.",
        "Фернандо Алонсо, гонщик «Формулы-1», сел за руль карта в три года.",
        "Нильс Бор, знаменитый физик, был вратарём сборной Дании.",
    ],
    "история": [
        "Великая китайская стена не видна с Луны невооруженным глазом.",
        "Первая фотография была сделана в 1826 году.",
        "Рим был основан в 753 году до нашей эры.",
        "Петр Первый имел собственный метод, чтобы бороться с алкоголизмом в стране. Пьяниц награждали медалями, "
        "которые весили примерно 7 килограмм и их нельзя было снимать с себя.",
        "Хрущев считался рекламным лицом компании из Америки «Пепси».",
        "Арабские цифры изобрелись не арабами, а математиками из Индии.",
        "Когда-то морфин использовался для уменьшения кашля.",
    ],
    "космос": [
        "Температура на поверхности Венеры достигает 465°C, что горячее, чем на Меркурии, хотя Венера дальше от Солнца.",
        "Самая высокая гора в Солнечной системе - гора Олимп на Марсе. Ее высота достигает 21 километр.",
        "Нейтронные звезды могут вращаться со скоростью до 600 оборотов в секунду.",
        "В космосе нельзя заплакать. В условиях микрогравитации слезы не падают вниз, как на Земле, а остаются на "
        "глазах в виде маленьких капель.",
        "В космосе нет звука. Звук не может распространяться в вакууме, так как ему нужны молекулы воздуха или "
        "другого вещества для передачи волн.",
        "Сатурн может плавать в воде. Если бы существовал бассейн с водой достаточного размера, Сатурн, из-за своей "
        "низкой плотности, плавал бы на поверхности.",
    ],
}

def calculate(expression):
    """Вычисляет простое арифметическое выражение."""
    try:
        expression = expression.replace('x', '*')
        result = eval(expression)
        return str(result)
    except (SyntaxError, TypeError, NameError, ZeroDivisionError):
        return "Не могу вычислить это выражение."

def get_random_fact(category):
    """Возвращает случайный факт из указанной категории."""
    if category in facts:
        return random.choice(facts[category])
    else:
        return "Нет фактов для этой категории."

def chatbot_response(text):
    text = text.lower()  # Приведение к нижнему регистру для унификации

    # Проверка на арифметическое выражение
    match = re.search(r"(\d+(\.\d+)?\s*[\+\-\*/]\s*\d+(\.\d+)?)", text)
    if match:
        expression = match.group(1)
        return "Результат: " + calculate(expression)

    for pattern, response in responses.items():
        if re.search(pattern, text):
            if callable(response):
                return response()  # Вызываем лямбда-функцию
            else:
                return response

    return random.choice(["Я не понял вопрос.", "Попробуйте перефразировать."])

if __name__ == "__main__":
    print("Привет! Вы можете задать мне следующие запросы:\n"
          "-Как тебя зовут?\n"
          "-Что ты умеешь?\n"
          "-Сколько сейчас время?\n"
          "-Какое сегодня число?\n"
          "-Какая сейчас погода?\n"
          "-Расскажи интересный факт\n"
          "-Вычисления (например, 2 + 2)\n"
          "-Введите 'выход' для завершения диалога.\n"
          "Чем могу быть полезен?")
    chosen_category = None  # Инициализируем переменную для хранения выбранной категории

    while True:
        user_input = input("Вы: ")
        user_input_lower = user_input.lower()  # Переводим ввод в нижний регистр один раз

        if user_input_lower == "выход":
            print("Бот: До свидания!")
            break

        if chosen_category:  # Если категория уже выбрана
            fact = get_random_fact(chosen_category)
            print("Бот:", fact)
            chosen_category = None  # Сбрасываем выбранную категорию
        else:
            response = chatbot_response(user_input_lower)

            if response == "О какой категории вы хотите узнать факт? (спорт, история, космос)":
                print("Бот:", response)
                category_input = input("Выберите категорию: ").lower()
                if category_input in facts:
                    chosen_category = category_input
                    fact = get_random_fact(chosen_category)
                    print("Бот:", fact)
                    chosen_category = None #Сбрасываем категорию после вывода факта
                else:
                    print("Бот: Нет фактов для этой категории.")
            else:
                print("Бот:", response)  # Выводим обычный ответ